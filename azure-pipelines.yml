trigger:
- master   # or main

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'

steps:
# 1. Install NuGet
- task: NuGetToolInstaller@1

# 2. Restore dependencies
- task: NuGetCommand@2
  inputs:
    restoreSolution: '**/*.sln'

# 3. Build solution
- task: DotNetCoreCLI@2
  displayName: 'Build project'
  inputs:
    command: 'build'
    projects: '**/*.csproj'
    arguments: '--configuration $(buildConfiguration)'

# 4. Run tests
- task: DotNetCoreCLI@2
  displayName: 'Run unit tests'
  inputs:
    command: 'test'
    projects: '**/*Tests/*.csproj'
    arguments: '--configuration $(buildConfiguration)'

# 5. Publish (creates deployable package)
- task: DotNetCoreCLI@2
  displayName: 'Publish project'
  inputs:
    command: 'publish'
    publishWebProjects: true
    arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: true

# 6. Publish build output as artifact
- task: PublishBuildArtifacts@1
  displayName: 'Publish build artifacts'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'

# 7. Deploy to Azure App Service
- task: AzureWebApp@1
  displayName: 'Deploy to Azure Web App'
  inputs:
    azureSubscription: 'DevOpsLabConnection-Prod'   # ðŸ‘ˆ replace with your service connection name
    appName: 'WebApiDev'                            # ðŸ‘ˆ replace with your Azure Web App name
    package: '$(Build.ArtifactStagingDirectory)/**/*.zip'
